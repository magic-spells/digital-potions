!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).TweenCalculator=t()}(this,(function(){"use strict";return class{constructor(e){this.setKeyframes(e),this.discreteProperties=["display","position","float","clear","visibility","overflow","overflow-x","overflow-y","flex-direction","flex-wrap","justify-content","align-items","align-content","order","grid-template-columns","grid-template-rows","grid-template-areas","grid-auto-flow","z-index","table-layout","empty-cells","caption-side","list-style-type","list-style-position","pointer-events","user-select","box-sizing","resize","text-align","text-transform","white-space","word-break","word-wrap","font-style","font-weight","font-variant","background-repeat","background-attachment","background-position","border-style","border-collapse","content","page-break-before","page-break-after","page-break-inside"]}calculateTween(e){const t=this,s={},r=100*e,n=new Set(t.keyframes.flatMap((e=>Object.keys(e.styles))));for(const e of n)s[e]=t.interpolateProperty(e,r);return s}interpolateProperty(e,t){const s=this;if(s.discreteProperties.includes(e))return s.interpolateDiscreteProperty(e,t);const r=s.keyframes.filter((t=>e in t.styles));if(0===r.length)return null;if(1===r.length)return r[0].styles[e];if(t<=r[0].percent)return r[0].styles[e];if(t>=r[r.length-1].percent)return r[r.length-1].styles[e];let n=r[0],a=r[r.length-1];for(let e=0;e<r.length-1;e++)if(t>=r[e].percent&&t<=r[e+1].percent){n=r[e],a=r[e+1];break}const o=n.styles[e],l=a.styles[e],i=(t-n.percent)/(a.percent-n.percent);return"transform"===e?s.interpolateTransform(o,l,i):s.interpolateValue(o,l,i)}interpolateDiscreteProperty(e,t){const s=this.keyframes.filter((t=>e in t.styles));if(0===s.length)return null;return s.reduce(((e,s)=>s.percent<=t&&s.percent>e.percent?s:e)).styles[e]}interpolateTransform(e,t,s){const r=this,n=r.parseTransform(e),a=r.parseTransform(t),o=[],l=new Set([...Object.keys(n),...Object.keys(a)]);for(const e of l){const t=n[e]||(r.isNumericFunction(e)?{value:0,unit:"px"}:{value:0,unit:""}),l=a[e]||{value:t.value,unit:t.unit};if(Array.isArray(t.value)){const n=t.value.map(((e,t)=>{const n=void 0!==l.value[t]?l.value[t]:{value:e.value,unit:e.unit};return`${r.interpolateValue(e.value,n.value,s,!0)}${e.unit||""}`}));o.push(`${e}(${n.join(", ")})`)}else{const n=r.interpolateValue(t.value,l.value,s,!0);o.push(`${e}(${n}${t.unit||""})`)}}return o.join(" ")}parseTransform(e){const t={},s=/(\w+)\(([^)]+)\)/g;let r;for(;null!==(r=s.exec(e));){const[,e,s]=r,n=s.split(/\s*,\s*|\s+/).map((e=>{const t=e.match(/^(-?\d*\.?\d+)(\D*)$/);return t?{value:parseFloat(t[1]),unit:t[2]}:{value:0,unit:""}}));n.length>1?t[e]=n:t[e]=n[0]}return t}interpolateValue(e,t,s,r=!1){const n=this;if(n.isColor(e)&&n.isColor(t))return n.interpolateColor(e,t,s);if("number"==typeof e&&"number"==typeof t){return parseFloat((e+(t-e)*s).toFixed(4)).toString()}const a=n.parseValue(e),o=n.parseValue(t);if(a&&o&&a.unit===o.unit){let e=(a.value+(o.value-a.value)*s).toFixed(2);return e=e.replace(/\.00$/,"").replace(/(\.\d)0$/,"$1"),`${e}${a.unit||""}`}return s<1?e:t}parseValue(e){if("number"==typeof e)return{value:e,unit:""};const t=String(e).match(/^(-?\d*\.?\d+)(\D*)$/);return t?{value:parseFloat(t[1]),unit:t[2]}:null}isColor(e){return/^(#[0-9A-Fa-f]{6}|rgb\(\s*\d+\s*,\s*\d+\s*,\s*\d+\s*\)|rgba\(\s*\d+\s*,\s*\d+\s*,\s*\d+\s*,\s*[\d.]+\s*\)|hsl\(\s*\d+\s*,\s*\d+%\s*,\s*\d+%\s*\)|hsla\(\s*\d+\s*,\s*\d+%\s*,\s*\d+%\s*,\s*[\d.]+\s*\))$/.test(e)}interpolateColor(e,t,s){const r=this.colorToRGB(e),n=this.colorToRGB(t);return`#${((1<<24)+(Math.round(r[0]+s*(n[0]-r[0]))<<16)+(Math.round(r[1]+s*(n[1]-r[1]))<<8)+Math.round(r[2]+s*(n[2]-r[2]))).toString(16).slice(1).toUpperCase()}`}colorToRGB(e){const t=this;if(e.startsWith("#"))return[parseInt(e.slice(1,3),16),parseInt(e.slice(3,5),16),parseInt(e.slice(5,7),16)];const s=e.match(/^rgb\s*\(\s*(\d+),\s*(\d+),\s*(\d+)\s*\)$/);if(s)return[parseInt(s[1]),parseInt(s[2]),parseInt(s[3])];const r=e.match(/^rgba\s*\(\s*(\d+),\s*(\d+),\s*(\d+),\s*[\d.]+\s*\)$/);if(r)return[parseInt(r[1]),parseInt(r[2]),parseInt(r[3])];if(e.match(/^hsl\s*\(\s*\d+\s*,\s*\d+%\s*,\s*\d+%\s*\)$/))return t.hslToRGB(e);return e.match(/^hsla\s*\(\s*\d+\s*,\s*\d+%\s*,\s*\d+%\s*,\s*[\d.]+\s*\)$/)?t.hslToRGB(e):[0,0,0]}hslToRGB(e){const t=e.match(/^hsl[a]?\(\s*(\d+),\s*(\d+)%?,\s*(\d+)%?\s*\)$/);if(!t)return[0,0,0];let s=parseInt(t[1],10),r=parseInt(t[2],10)/100,n=parseInt(t[3],10)/100;s%=360,s<0&&(s+=360);const a=(1-Math.abs(2*n-1))*r,o=a*(1-Math.abs(s/60%2-1)),l=n-a/2;let i,u,c;[i,u,c]=0<=s&&s<60?[a,o,0]:60<=s&&s<120?[o,a,0]:120<=s&&s<180?[0,a,o]:180<=s&&s<240?[0,o,a]:240<=s&&s<300?[o,0,a]:[a,0,o];return[Math.round(255*(i+l)),Math.round(255*(u+l)),Math.round(255*(c+l))]}setKeyframes(e){this.keyframes=e.sort(((e,t)=>e.percent-t.percent))}isNumericFunction(e){return["translate","translateX","translateY","translateZ","scale","scaleX","scaleY","scaleZ","rotate","rotateX","rotateY","rotateZ","skew","skewX","skewY","perspective"].includes(e)}}}));
